services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: view-rush-nginx
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    depends_on:
      - api
    networks:
      - view-rush-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Certbot for Let's Encrypt SSL certificates (only for production)
  # Uncomment this service when deploying to production with a domain
  # certbot:
  #   image: certbot/certbot
  #   container_name: view-rush-certbot
  #   volumes:
  #     - ./certbot/www:/var/www/certbot:rw
  #     - ./certbot/conf:/etc/letsencrypt:rw
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   networks:
  #     - view-rush-network

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: view-rush-backend
    expose:
      - "8080"  # Expose to nginx, not to host
    environment:
      - ENVIRONMENT=development  # Enable Swagger docs
      - PORT=8080
      - PYTHONUNBUFFERED=1
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173,https://your-domain.com
    networks:
      - view-rush-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  view-rush-network:
    driver: bridge
